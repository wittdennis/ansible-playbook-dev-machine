---
- name: Set brew mac prefix
  ansible.builtin.set_fact:
    homebrew_mac_prefix: "/opt/homebrew"

- name: Set brew install path
  ansible.builtin.set_fact:
    homebrew_mac_install_path: "{{ homebrew_mac_prefix }}"

- name: Set brew bin path
  ansible.builtin.set_fact:
    homebrew_mac_brew_bin_path: "{{ homebrew_mac_install_path }}/bin"

- name: Determine Homebrew ownership variables
  ansible.builtin.set_fact:
    homebrew_user: "{{ homebrew_user | default(ansible_user_id) }}"
    homebrew_group: "{{ homebrew_group | default(ansible_user_gid) }}"

# Homebrew setup prerequisites.
- name: Ensure Homebrew parent directory has correct permissions (M1).
  ansible.builtin.file:
    path: "{{ homebrew_mac_prefix }}"
    owner: "{{ homebrew_user }}"
    state: directory
    mode: "0755"
  become: true
  when: ansible_machine == 'arm64'

- name: Ensure Homebrew parent directory has correct permissions (Intel).
  when: ansible_machine == 'x86_64'
  block:
    - name: Ensure Homebrew parent directory has correct permissions (MacOS >= 10.13).
      ansible.builtin.file:
        path: "{{ homebrew_mac_prefix }}"
        owner: root
        state: directory
        mode: "0755"
      become: true
      when: "ansible_distribution_version is version('10.13', '>=')"

    - name: Ensure Homebrew parent directory has correct permissions (MacOS < 10.13).
      ansible.builtin.file:
        path: "{{ homebrew_mac_prefix }}"
        owner: root
        group: admin
        state: directory
        mode: "0775"
      become: true
      when: "ansible_distribution_version is version('10.13', '<')"

- name: Check if homebrew already exists.
  ansible.builtin.stat:
    path: "{{ homebrew_mac_brew_bin_path }}/brew"
  register: pre_installed_brew

- name: Ensure Homebrew directory exists.
  ansible.builtin.file:
    path: "{{ homebrew_install_install_path }}"
    owner: "{{ homebrew_user }}"
    group: "{{ homebrew_group }}"
    state: directory
    mode: "0755"
  become: true

# Clone Homebrew.
- name: Ensure Homebrew is installed.
  ansible.builtin.git:
    repo: "{{ homebrew_repo }}"
    version: "{{ homebrew_version }}"
    dest: "{{ homebrew_mac_install_path }}"
    remote: origin
    clone: true
  become: true
  become_user: "{{ homebrew_user }}"
  when: not pre_installed_brew.stat.exists

# Adjust Homebrew permissions.
- name: Ensure proper permissions and ownership on homebrew_mac_brew_bin_path dirs.
  ansible.builtin.file:
    path: "{{ homebrew_mac_brew_bin_path }}"
    state: directory
    owner: "{{ homebrew_user }}"
    group: "{{ homebrew_group }}"
    mode: "0775"
  become: true

- name: Ensure proper ownership on homebrew_mac_install_path subdirs.
  ansible.builtin.file:
    path: "{{ homebrew_mac_install_path }}"
    state: directory
    owner: "{{ homebrew_user }}"
    group: "{{ homebrew_group }}"
    recurse: true
    follow: false
  become: true

# Place brew binary in proper location and complete setup.
- name: Check if homebrew binary is already in place.
  ansible.builtin.stat:
    path: "{{ homebrew_mac_brew_bin_path }}/brew"
  register: homebrew_binary
  check_mode: false

- name: Symlink brew to homebrew_mac_brew_bin_path.
  ansible.builtin.file:
    src: "{{ homebrew_mac_install_path }}/bin/brew"
    dest: "{{ homebrew_mac_brew_bin_path }}/brew"
    state: link
  when: not homebrew_binary.stat.exists
  become: true

- name: Add missing folder if not on Apple-chipset
  ansible.builtin.set_fact:
    homebrew_folders_base: "{{ homebrew_folders_base + ['Homebrew'] }}"
  when: ansible_machine != 'arm64'
